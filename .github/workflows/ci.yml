name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - name: Install deps
        run: npm ci
      - name: Lockfile lint
        run: npm run lint:lockfile
      - name: Lint
        run: npm run lint
      - name: Markdown lint
        run: npm run lint:md
      - name: Type check
        run: npm run type-check
      - name: Build (SSR)
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-ssr-build
          path: .next

  static-export:
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - name: Install deps
        run: npm ci
      - name: Build (Static Export)
        run: npm run build:static
      - name: Assert headers warning logged
        run: |
          if ! grep -q "STATIC_EXPORT enabled" server.log 2>/dev/null; then
            echo "Warning: expected static export warning not found (non-blocking)";
          fi
      - name: Upload static artifact
        uses: actions/upload-artifact@v4
        with:
          name: static-export-out
          path: out

  e2e:
    runs-on: ubuntu-latest
    needs: quality
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - name: Install deps
        run: npm ci
      - name: Build (SSR)
        run: npm run build
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run E2E Tests (prod server)
        env:
          PLAYWRIGHT_PROD: '1'
          CI: '1'
        run: npx playwright test --reporter=github
      - name: Upload Playwright Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            test-results
            playwright-report
            traces
